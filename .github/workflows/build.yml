name: Build
on: [push]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    # container: bdwyertech/win-python
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            .venv
          key: ${{ runner.os }}-${{ hashFiles('Pipfile*') }}

      - name: Build
        run: |
          python -m pip install pipenv
          pipenv install -d
          pipenv run build

      - name: Upload Standalone Binary
        uses: actions/upload-artifact@v2
        with:
          name: cookiecutter.exe
          path: dist/cookiecutter.exe

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    # container: bdwyertech/win-python
    steps:
      - name: Download Standalone Binary
        uses: actions/download-artifact@v2
        with:
          name: cookiecutter.exe
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./dist/cookiecutter.exe
          asset_name: cookiecutter.exe
          asset_content_type: application/x-msdownload
